---
import { getCollection } from 'astro:content';
import { getFormattedDate } from '@utils/view-helpers';
import Layout from '@layouts/Layout.astro';

const articles = (await getCollection('blog')).sort(
  (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);
---

<Layout
  title='Blog'
  openGraph={{
    basic: {
      title: 'Blog',
      type: 'website',
      image: 'https://shikakun.com/ogimage.png',
    },
  }}
>
  <main class='page'>
    <div class='blog'>
      <div class='container'>
        <h1 class='visually-hidden'>Blog</h1>
        {
          articles.length > 0 && (
            <ul class='article-list'>
              {articles.map((article) => (
                <li class='article-item'>
                  <a class='link' href={`/blog/${article.slug}/`}>
                    <div class='title'>{article.data.title}</div>
                    <time
                      class='date'
                      datetime={getFormattedDate(
                        article.data.pubDate,
                        'yyyy-mm-dd'
                      )}
                    >
                      <span>
                        {getFormattedDate(article.data.pubDate, 'yyyy-mm-dd')}
                      </span>
                    </time>
                  </a>
                </li>
              ))}
            </ul>
          )
        }
      </div>
    </div>
  </main>
</Layout>

<style lang='scss'>
  @use '@styles/variables';
  @use '@styles/functions';
  @use '@styles/mixins';
  @use 'sass:math';
  @use 'sass:map';

  $side-spacing: math.div(functions.get-interactive-component-size(m), 4);

  .page {
    @include mixins.page;
  }

  .container {
    @include mixins.container;
  }

  .blog {
    padding: functions.get-sizing-scale-size(192) 0;
  }

  .article-list {
    @include mixins.initialize(ul);
    display: flex;
    flex-direction: column;
    gap: functions.get-spacing-size(l);
    margin-left: 0 - $side-spacing;
    @include mixins.mq-boundary(up, s) {
      gap: functions.get-spacing-size(m);
    }
  }

  .article-item {
    @include mixins.initialize(li);
    display: flex;
    justify-content: flex-start;
  }

  .link {
    @include mixins.initialize(a);
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    gap: functions.get-spacing-size(2xs);
    min-height: functions.get-interactive-component-size(m);
    padding: 0 $side-spacing;
    color: inherit;
    @include mixins.interactive-overlay;
    @include mixins.focus-ring;
    @include mixins.mq-boundary(up, s) {
      flex-direction: row;
      align-items: center;
      gap: $side-spacing;
    }
  }

  .title {
    @include mixins.text(l, dense);
    @include mixins.mq-boundary(up, m) {
      @include mixins.text(xl, dense);
    }
  }

  .date {
    display: block;
    height: 100%;
    color: functions.get-text-color(light, secondary);
    @include mixins.text(s, dense);
    @include mixins.mq-boundary(up, m) {
      @include mixins.text(m, dense);
    }

    span {
      display: block;
      white-space: nowrap;
      @include mixins.mq-boundary(up, s) {
        margin-top: 0.2em;
      }
    }
  }
</style>
